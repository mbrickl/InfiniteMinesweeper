// Generated by CoffeeScript 1.3.3
(function() {
  var MAX_TIME, SQ_HEIGHT, SQ_WIDTH,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  MAX_TIME = 30;

  SQ_WIDTH = 50;

  SQ_HEIGHT = 50;

  this.Game = (function() {

    function Game() {
      this.stopClock = __bind(this.stopClock, this);

      this.startClock = __bind(this.startClock, this);

      this.runClock = __bind(this.runClock, this);

      var _this = this;
      this.field = new Field;
      this.score = 0;
      this.inProgress = false;
      this.time = MAX_TIME;
      this.board = jQuery.infinitedrag("#board", {}, {
        width: SQ_WIDTH,
        height: SQ_HEIGHT,
        start_col: 0,
        start_row: 0,
        oncreate: function($element, col, row) {
          if (!(_this.field.array[$element.attr("id")] != null)) {
            $element.attr("id", _this.field.coordinatesToIndex(col, row));
            $element.addClass("untouched");
          } else {
            $element.addClass(_this.field.array[$element.attr("id")]);
          }
          $element.addClass("square");
          $element.click(sqClick);
          return true;
        }
      });
      true;
    }

    Game.prototype.updateScore = function(increment) {
      this.score += increment;
      $('#score').text(this.score);
      return true;
    };

    Game.prototype.runClock = function() {
      var minutes, seconds;
      if (this.inProgress) {
        if (this.time <= 0) {
          this.inProgress = false;
        } else {
          this.time--;
          minutes = Math.floor(this.time / 60);
          seconds = this.time % 60;
          $('#clock').text(minutes + ":" + (seconds < 10 ? "0" : "") + seconds);
          setTimeout(this.runClock, 1000);
        }
      }
      return true;
    };

    Game.prototype.startClock = function() {
      if (!this.inProgress) {
        this.inProgress = true;
        setTimeout(this.runClock, 1000);
      }
      return true;
    };

    Game.prototype.stopClock = function() {
      this.inProgress = false;
      return true;
    };

    return Game;

  })();

}).call(this);
